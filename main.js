!function(){"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n){var r=t.card,o=t.handleCardClick,i=t.userData,a=t.handleCardLike,u=t.handleCardDelete;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r.name,this._link=r.link,this._likes=r.likes,this._counterLikes=r.likes.length,this._cardId=r._id,this._ownerName=r.owner.name,this._ownerId=r.owner._id,this._user=i._id,this._card=r,this._openPopup=o,this._handleCardLike=a,this._handleCardDelete=u,this._cardSelector=n}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"createCard",value:function(){this._template=this._getTemplate();var t=this._template.querySelector(".elements__item-image");return this._template.querySelector(".elements__item-description-title").textContent=this._name,t.alt="здесь должна быть картинка "+this._name,t.src=this._link,this._addEventListeners(t),this._likeListener(),this._deleteListener(),this._setLikedStatus(),this._template}},{key:"_likeListener",value:function(){var t=this;this._template.querySelector(".elements__item-description-like-button").addEventListener("click",(function(e){t._handleCardLike(e).then((function(n){e.target.classList.toggle("elements__item-description-like-button__active"),t._setLikes(n)})).catch((function(t){return console.error(t)}))}))}},{key:"_setLikes",value:function(t){this._likesCounter.textContent=t.likes.length}},{key:"_setLikedStatus",value:function(){var t=this;this._likesCounter=this._template.querySelector(".elements__item-description-like-counter"),this._likesCounter.textContent=this._counterLikes,this._likes.some((function(e){return e._id===t._user}))&&this._template.querySelector(".elements__item-description-like-button").classList.add("elements__item-description-like-button__active")}},{key:"_deleteListener",value:function(){var t=this;this._deleteButton=this._template.querySelector(".elements__item-description-delete-button"),this._ownerId!==this._user?this._deleteButton.classList.add("removed"):this._deleteButton.addEventListener("click",(function(e){t._handleCardDelete()}))}},{key:"delete",value:function(){this._template.remove()}},{key:"_addEventListeners",value:function(t){var e=this;t.addEventListener("click",(function(){e._openPopup(e._name,e._link)}))}}])&&t(n.prototype,r),e}();function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(e.inputSelector)),this._submitButton=this._form.querySelector(e.submitButtonSelector)}var e,r;return e=t,(r=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(t){return t.preventDefault()})),this._setEventListeners()}},{key:"clearForm",value:function(){var t=this;this._form.reset(),this._inputList.forEach((function(e){t._hideInputError(e)}))}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","true")):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=t.parentNode.querySelector(".".concat(this._errorClass));t.classList.add(this._inputErrorClass),n.textContent=e,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=t.parentNode.querySelector(".".concat(this._errorClass));t.classList.remove(this._inputErrorClass),e.textContent=""}}])&&n(e.prototype,r),t}();function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var i=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(t){var e=this;this.clear(),t.forEach((function(t){e._renderer(t)}))}},{key:"setItems",value:function(t){this._renderedItems=t}}])&&o(e.prototype,n),t}();function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(t._popup.classList.contains("opened")&&e.target===t._popup.querySelector(".popup__container-close-button")||e.target===t._popup)&&t.close()}))}}])&&a(e.prototype,n),t}();function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=h(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function p(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function h(t){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=h(r);if(o){var n=h(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return p(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e}return e=a,(n=[{key:"open",value:function(t,e){this._popup.querySelector(".popup__description").textContent=t,this._image.src=e,this._image.alt=t,l(h(a.prototype),"open",this).call(this)}}])&&s(e.prototype,n),a}(u);function d(t){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function v(t,e,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=g(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function g(t){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=g(r);if(o){var n=g(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return b(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitCallback=e,n._button=n._popup.querySelector(".popup__container-form-save-button"),n._textContainer=n._button.textContent,n._form=n._popup.querySelector(".popup__container-form"),n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=Array.from(this._popup.getElementsByTagName("input")),e={};return t.forEach((function(t){e[t.getAttribute("Name")]=t.value})),e}},{key:"setEventListeners",value:function(){var t=this;v(g(a.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__container-form-save-button").addEventListener("click",(function(){t._renderLoading(),t._submitCallback(t._getInputValues())}))}},{key:"close",value:function(){v(g(a.prototype),"close",this).call(this),this._form.reset()}},{key:"_renderLoading",value:function(){this._button.textContent="Сохранение..."}},{key:"resetSubmitButton",value:function(){this._button.textContent=this._textContainer}}])&&y(e.prototype,n),a}(u),S={formSelector:".popup__container-form",inputSelector:".popup__container-form-input",submitButtonSelector:".popup__container-form-save-button",inactiveButtonClass:"popup__container-form-save-button_disabled",inputErrorClass:"popup__container-form-input_error",errorClass:"error"},C=document.querySelector(".add-place").querySelector(".popup__container-form"),w=document.querySelector(".profile-popup").querySelector(".popup__container-form"),E=document.querySelector(".avatar").querySelector(".popup__container-form"),L=document.querySelector(".popup__container-form-input_text_username"),O=document.querySelector(".popup__container-form-input_text_profession"),T=document.querySelector(".profile__info-edit-button"),P=document.querySelector(".profile__avatar-container"),j={about:"",avatar:"",cohort:"cohort-27",name:"",_id:""};function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var q=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._profileName=document.querySelector(e),this._profileTitle=document.querySelector(n),this._profileAvatar=document.querySelector(r),this._editedProfileName=document.querySelector(".popup__container-form-input_text_username"),this._editedProfileTitle=document.querySelector(".popup__container-form-input_text_profession")}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(t){return t.name=this._profileName.textContent,t.about=this._profileTitle.textContent,t.avatar=this._profileAvatar.src,t}},{key:"getUserId",value:function(){return this._id}},{key:"setUserInfo",value:function(t){t.name&&t.about?(this._profileName.textContent=t.name,this._profileTitle.textContent=t.about):console.log("Ошибка загрузки профиля")}},{key:"setUserAvatar",value:function(t){t.avatar?this._profileAvatar.src=t.avatar:console.log("Ошибка загрузки аватара")}},{key:"setUserId",value:function(t,e){if(t)return this._id=e._id,t._id=this._id;console.log("Ошибка загрузки ID gользователя")}}])&&I(e.prototype,n),t}();function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var B=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._authorization=e.authorization,this._contentTip=e.contentTip}var e,n;return e=t,(n=[{key:"_getResponseData",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getCards",value:function(){return fetch("".concat(this._url,"cards"),{method:"GET",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"getProfile",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"editProfileInfo",value:function(t){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({name:t.name,about:t.about})}).then(this._getResponseData)}},{key:"editProfileAvatar",value:function(t){return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({avatar:t.avatar})}).then(this._getResponseData)}},{key:"addCard",value:function(t){return fetch("".concat(this._url,"cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({link:t.link,name:t.name})}).then(this._getResponseData)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"cards/").concat(t._id),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"setLike",value:function(t){return fetch("".concat(this._url,"cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"deleteLike",value:function(t){var e=this;return fetch("".concat(this._url,"cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then((function(t){return e._getResponseData(t)}))}}])&&R(e.prototype,n),t}();function x(t){return(x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function A(t,e,n){return(A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=N(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function z(t,e){return(z=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function U(t,e){if(e&&("object"===x(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function N(t){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var V=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&z(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=N(r);if(o){var n=N(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return U(this,t)});function a(t){var e,n=t.popupSelector,r=t.formSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,n))._form=e._popup.querySelector(".popup__container-form"),e.button=e._popup.querySelector(".popup__container-form-save-button"),e._formSubmit=r,e}return e=a,(n=[{key:"open",value:function(t){A(N(a.prototype),"open",this).call(this),this.button.textContent="Да",this._card=t}},{key:"setEventListeners",value:function(){var t=this;A(N(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._renderLoading(),t._formSubmit(t._card)}))}},{key:"_renderLoading",value:function(){this.button.textContent="Удаление..."}}])&&D(e.prototype,n),a}(u);function F(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function H(t){var n;n=function(t){var n=new e({card:t,handleCardClick:function(t,e){Y.open(t,e)},userData:j,handleCardLike:function(e){return e.target.classList.contains("elements__item-description-like-button__active")?$.deleteLike(t._id).catch((function(t){return console.error(t)})):$.setLike(t._id).catch((function(t){return console.error(t)}))},handleCardDelete:function(){nt.open(t),nt.button.addEventListener("click",(function(){n.delete()}))}},"#card");return n}(t).createCard(),Q.addItem(n)}var J=new r(S,C);J.enableValidation();var M=new r(S,w);M.enableValidation();var G=new r(S,E);G.enableValidation();var $=new B({url:"https://mesto.nomoreparties.co/v1/cohort-27/",authorization:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15",contentTip:"application/json"}),K=new q(".profile__info-username",".profile__info-profession",".profile__avatar"),Q=new i({items:[],renderer:function(t){H(t)}},".elements"),W=$.getCards(),X=$.getProfile();Promise.all([W,X]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return F(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];K.setUserInfo(i),K.setUserAvatar(i),K.setUserId(j,i),K.getUserInfo(j),o.reverse().forEach((function(t){H(t)}))})).catch((function(t){return console.log(t)}));var Y=new _(".image-popup");Y.setEventListeners();var Z=new k(".profile-popup",(function(t){$.editProfileInfo(t).then((function(){K.setUserInfo(t),Z.resetSubmitButton(),Z.close()})).catch((function(t){return console.error(t)}))}));Z.setEventListeners();var tt=new k(".avatar",(function(t){$.editProfileAvatar(t).then((function(){K.setUserAvatar(t),tt.close(),G.toggleButtonState(),tt.resetSubmitButton()})).catch((function(t){return console.error(t)}))}));tt.setEventListeners();var et=new k(".add-place",(function(t){t.likes=[],t.likes.length=0,t.likes._id=K.getUserId(),t.owner={name:"",_id:""},t.owner.name=j.name,t.owner._id=K.getUserId(),$.addCard(t).then((function(e){t._id=e._id,H(t),et.resetSubmitButton(),et.close()})).catch((function(t){return console.error(t)}))}));et.setEventListeners();var nt=new V({popupSelector:".delete-popup",formSubmit:function(t){$.deleteCard(t).then((function(){nt.close()})).catch((function(t){return console.error(t)}))}});nt.setEventListeners(),T.addEventListener("click",(function(){M.clearForm();var t=K.getUserInfo(j);L.value=t.name,O.value=t.about,M.toggleButtonState(),Z.open()})),document.querySelector(".profile__add-button").addEventListener("click",(function(){J.clearForm(),J.toggleButtonState(),et.open()})),P.addEventListener("click",(function(){G.clearForm(),G.toggleButtonState(),tt.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,