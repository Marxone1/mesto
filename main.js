!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r=e.card,o=e.handleCardClick,i=e.userData,a=e.handleCardLike,u=e.handleCardDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=r.name,this._link=r.link,this._likes=r.likes,this._counterLikes=r.likes.length,this._cardId=r._id,this._ownerName=r.owner.name,this._ownerId=r.owner._id,this._user=i,this._card=r,this._openPopup=o,this._handleCardLike=a,this._handleCardDelete=u,this._cardSelector=n}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"createCard",value:function(){this._template=this._getTemplate();var e=this._template.querySelector(".elements__item-image");return this._template.querySelector(".elements__item-description-title").textContent=this._name,e.alt="здесь должна быть картинка "+this._name,e.src=this._link,this._addEventListeners(e),this._likeListener(),this._deleteListener(),this._setLikedStatus(),this._template}},{key:"_likeListener",value:function(){var e=this;this._template.querySelector(".elements__item-description-like-button").addEventListener("click",(function(t){e._handleCardLike(t).then((function(n){t.target.classList.toggle("elements__item-description-like-button__active"),e._setLikes(n)})).catch((function(e){return console.error(e)}))}))}},{key:"_setLikes",value:function(e){this._likesCounter.textContent=e.likes.length}},{key:"_setLikedStatus",value:function(){var e=this;this._likesCounter=this._template.querySelector(".elements__item-description-like-counter"),this._likesCounter.textContent=this._counterLikes,this._likes.some((function(t){return t._id===e._user}))&&this._template.querySelector(".elements__item-description-like-button").classList.add("elements__item-description-like-button__active")}},{key:"_deleteListener",value:function(){var e=this;this._deleteButton=this._template.querySelector(".elements__item-description-delete-button"),this._ownerId!==this._user?this._deleteButton.classList.add("removed"):this._deleteButton.addEventListener("click",(function(t){e._handleCardDelete()}))}},{key:"delete",value:function(){this._template.remove()}},{key:"_addEventListeners",value:function(e){var t=this;e.addEventListener("click",(function(){t._openPopup(t._name,t._link)}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(t.inputSelector)),this._submitButton=this._form.querySelector(t.submitButtonSelector)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}},{key:"clearForm",value:function(){var e=this;this._form.reset(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","true")):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=e.parentNode.querySelector(".".concat(this._errorClass));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=e.parentNode.querySelector(".".concat(this._errorClass));e.classList.remove(this._inputErrorClass),t.textContent=""}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}},{key:"setItems",value:function(e){this._renderedItems=e}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(e._popup.classList.contains("opened")&&t.target===e._popup.querySelector(".popup__container-close-button")||t.target===e._popup)&&e.close()}))}}])&&a(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popup.querySelector(".popup__image"),t}return t=a,(n=[{key:"open",value:function(e,t){this._popup.querySelector(".popup__description").textContent=e,this._image.src=t,this._image.alt=e,l(h(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),a}(u);function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitCallback=t,n._button=n._popup.querySelector(".popup__container-form-save-button"),n._textContainer=n._button.textContent,n._form=n._popup.querySelector(".popup__container-form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=Array.from(this._popup.getElementsByTagName("input")),t={};return e.forEach((function(e){t[e.getAttribute("Name")]=e.value})),t}},{key:"setEventListeners",value:function(){var e=this;v(k(a.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__container-form-save-button").addEventListener("click",(function(){e._renderLoading(),e._submitCallback(e._getInputValues())}))}},{key:"close",value:function(){v(k(a.prototype),"close",this).call(this),this._form.reset()}},{key:"_renderLoading",value:function(){this._button.textContent="Сохранение..."}},{key:"resetSubmitButton",value:function(){this._button.textContent=this._textContainer}}])&&y(t.prototype,n),a}(u);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(n),this._profileAvatar=document.querySelector(r),this._editedProfileName=document.querySelector(".popup__container-form-input_text_username"),this._editedProfileTitle=document.querySelector(".popup__container-form-input_text_profession")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,about:this._profileTitle.textContent,avatar:this._avatar}}},{key:"setUserInfo",value:function(e){e.name&&e.about?(this._profileName.textContent=e.name,this._profileTitle.textContent=e.about):console.log("Ошибка загрузки профиля")}},{key:"setUserAvatar",value:function(e){e.avatar?this._profileAvatar.src=e.avatar:console.log("Ошибка загрузки аватара")}},{key:"setUserId",value:function(e,t){if(e)return e._id=t;console.log("Ошибка загрузки ID gользователя")}}])&&S(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._authorization=t.authorization,this._contentTip=t.contentTip}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getCards",value:function(e){var t=this;return fetch("".concat(this._url,"cards"),{method:"GET",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then((function(e){return e.json()})).then((function(e){t.res=e,t._getResponseData}))}},{key:"getProfile",value:function(){var e=this;return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then((function(e){return e.json()})).then((function(t){e.res=t,e._getResponseData}))}},{key:"getUserId",value:function(e){return e?(this._id=e._id,this._id):this._id}},{key:"editProfileInfo",value:function(e){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({name:e.name,about:e.about})}).then(this._getResponseData)}},{key:"editProfileAvatar",value:function(e){return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({avatar:e.avatar})}).then(this._getResponseData)}},{key:"addCard",value:function(e){return fetch("".concat(this._url,"cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({link:e.link,name:e.name})}).then(this._getResponseData)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"cards/").concat(e._id),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"setLike",value:function(e){return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then((function(e){return t._getResponseData(e)}))}}])&&w(t.prototype,n),e}();function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t,n=e.popupSelector,r=e.formSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popup.querySelector(".popup__container-form"),t.button=t._popup.querySelector(".popup__container-form-save-button"),t._formSubmit=r,t}return t=a,(n=[{key:"open",value:function(e){T(q(a.prototype),"open",this).call(this),this.button.textContent="Да",this._card=e}},{key:"setEventListeners",value:function(){var e=this;T(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._renderLoading(),e._formSubmit(e._card)}))}},{key:"_renderLoading",value:function(){this.button.textContent="Удаление..."}}])&&O(t.prototype,n),a}(u),R={formSelector:".popup__container-form",inputSelector:".popup__container-form-input",submitButtonSelector:".popup__container-form-save-button",inactiveButtonClass:"popup__container-form-save-button_disabled",inputErrorClass:"popup__container-form-input_error",errorClass:"error"},B=document.querySelector(".add-place").querySelector(".popup__container-form"),x=document.querySelector(".profile-popup").querySelector(".popup__container-form"),D=document.querySelector(".avatar").querySelector(".popup__container-form"),z=document.querySelector(".popup__container-form-input_text_username"),A=document.querySelector(".popup__container-form-input_text_profession"),U=document.querySelector(".profile__info-edit-button"),N=document.querySelector(".profile__avatar-container"),V={about:"",avatar:"",cohort:"cohort-27",name:"",_id:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15"};function F(e){var n;n=function(e){var n=new t({card:e,handleCardClick:function(e,t){W.open(e,t)},userData:M.getUserId(),handleCardLike:function(t){return t.target.classList.contains("elements__item-description-like-button__active")?M.deleteLike(e._id).catch((function(e){return console.error(e)})):M.setLike(e._id).catch((function(e){return console.error(e)}))},handleCardDelete:function(){$.open(e),$.button.addEventListener("click",(function(){n.delete()}))}},"#card");return n}(e).createCard(),Q.addItem(n)}var H=new r(R,B);H.enableValidation();var J=new r(R,x);J.enableValidation();var G=new r(R,D);G.enableValidation();var M=new E({url:"https://mesto.nomoreparties.co/v1/cohort-27/",authorization:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15",contentTip:"application/json"}),K=new C(".profile__info-username",".profile__info-profession",".profile__avatar");M.getProfile().then((function(){K.setUserId(V,M.getUserId(M.res)),K.setUserInfo(M.res),K.setUserAvatar(M.res)})).catch((function(e){return console.error(e)}));var Q=new i({items:[],renderer:function(e){F(e)}},".elements");M.getCards(Q).then((function(){M.res.some((function(e){return e._id}))&&M._id?Q.renderItems(M.res.reverse()):console.log("Ошибка: проблема с принадлежностью карточек")})).catch((function(e){return console.error(e)}));var W=new _(".image-popup");W.setEventListeners();var X=new g(".profile-popup",(function(e){M.editProfileInfo(e).then((function(){K.setUserInfo(e),X.resetSubmitButton(),X.close()})).catch((function(e){return console.error(e)}))}));X.setEventListeners();var Y=new g(".avatar",(function(e){M.editProfileAvatar(e).then((function(){K.setUserAvatar(e),Y.close(),G.toggleButtonState(),Y.resetSubmitButton()})).catch((function(e){return console.error(e)}))}));Y.setEventListeners();var Z=new g(".add-place",(function(e){e.likes=[],e.likes.length=0,e.likes._id="fbb15bf9e92462388044ef4e",e.owner={name:"",_id:""},e.owner.name=V.name,e.owner._id=V._id,M.addCard(e).then((function(t){console.log(t),e._id=t._id,F(e),Z.resetSubmitButton(),Z.close()})).catch((function(e){return console.error(e)}))}));Z.setEventListeners();var $=new I({popupSelector:".delete-popup",formSubmit:function(e){M.deleteCard(e).then((function(){$._button.textContent=$._textContainer,$.close()})).catch((function(e){return console.error(e)}))}});$.setEventListeners(),U.addEventListener("click",(function(){J.clearForm();var e=K.getUserInfo();z.value=e.name,A.value=e.about,J.toggleButtonState(),X.open()})),document.querySelector(".profile__add-button").addEventListener("click",(function(){H.clearForm(),H.toggleButtonState(),Z.open()})),N.addEventListener("click",(function(){G.clearForm(),G.toggleButtonState(),Y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,