!function(){"use strict";function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var e=function(){function e(t,n){var o=t.card,r=t.handleCardClick,i=t.userData,a=t.handleCardLike,u=t.handleCardDelete;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=o.name,this._link=o.link,this._likeId=o.likes,this._counterLikes=o.likes.length,this._cardId=o._id,this._ownerName=o.owner.name,this._ownerId=o.owner._id,this._user=i._id,this._openPopup=r,this._handleCardLike=a,this._handleCardDelete=u,this._cardSelector=n}var n,o;return n=e,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"createCard",value:function(){this._template=this._getTemplate();var t=this._template.querySelector(".elements__item-image");return this._template.querySelector(".elements__item-description-title").textContent=this._name,t.alt="здесь должна быть картинка "+this._name,t.src=this._link,this._addEventListeners(t),this._likeListener(),this._deleteListener(),this._setLikedStatus(),this._template}},{key:"_likeListener",value:function(){var t=this;this._template.querySelector(".elements__item-description-like-button").addEventListener("click",(function(e){t._handleCardLike(!e.target.classList.contains("elements__item-description-like-button__active")).then((function(n){e.target.classList.toggle("elements__item-description-like-button__active"),t._setLikes(n)})).catch((function(t){return console.error(t)}))}))}},{key:"_setLikes",value:function(t){this._template.querySelector(".elements__item-description-like-counter").textContent=t.likes.length}},{key:"_setLikedStatus",value:function(){var t=this;this._template.querySelector(".elements__item-description-like-counter").textContent=this._counterLikes,this._likeId.some((function(e){return e._id===t._user}))&&this._template.querySelector(".elements__item-description-like-button").classList.add("elements__item-description-like-button__active")}},{key:"_deleteListener",value:function(){var t=this;this._deleteButton=this._template.querySelector(".elements__item-description-delete-button"),this._ownerId!==this._user?this._deleteButton.classList.add("removed"):this._deleteButton.addEventListener("click",(function(e){t._handleCardDelete()}))}},{key:"_addEventListeners",value:function(t){var e=this;t.addEventListener("click",(function(){e._openPopup(e._name,e._link)}))}}])&&t(n.prototype,o),e}();function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(e.inputSelector)),this._submitButton=this._form.querySelector(e.submitButtonSelector)}var e,o;return e=t,(o=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(t){return t.preventDefault()})),this._setEventListeners()}},{key:"clearForm",value:function(){var t=this;this._form.reset(),this._inputList.forEach((function(e){t._hideInputError(e)}))}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","true")):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=t.parentNode.querySelector(".".concat(this._errorClass));t.classList.add(this._inputErrorClass),n.textContent=e,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=t.parentNode.querySelector(".".concat(this._errorClass));t.classList.remove(this._inputErrorClass),e.textContent=""}}])&&n(e.prototype,o),t}();function r(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var i=function(){function t(e,n){var o=e.items,r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=o,this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var t=this;this.clear(),this._renderedItems.forEach((function(e){t._renderer(e)}))}},{key:"setItems",value:function(t){this._renderedItems=t}}])&&r(e.prototype,n),t}();function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(t._popup.classList.contains("opened")&&e.target===t._popup.querySelector(".popup__container-close-button")||e.target===t._popup)&&t.close()}))}}])&&a(e.prototype,n),t}();function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function s(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function l(t,e,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=h(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function p(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function h(t){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(a,t);var e,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=h(o);if(r){var n=h(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return p(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e}return e=a,(n=[{key:"open",value:function(t,e){this._popup.querySelector(".popup__description").textContent=t,this._image.src=e,this._image.alt=t,l(h(a.prototype),"open",this).call(this)}}])&&s(e.prototype,n),a}(u);function d(t){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function y(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function v(t,e,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=k(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function k(t){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var g=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}(a,t);var e,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=k(o);if(r){var n=k(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return b(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitCallback=e,n._button=n._popup.querySelector(".popup__container-form-save-button"),n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=Array.from(this._popup.getElementsByTagName("input")),e={};return t.forEach((function(t){e[t.getAttribute("Name")]=t.value})),e}},{key:"setEventListeners",value:function(){var t=this;v(k(a.prototype),"setEventListeners",this).call(this),this._textContainer=this._button.textContent,this._popup.querySelector(".popup__container-form-save-button").addEventListener("click",(function(){t._button.textContent="Сохранение...",t._submitCallback(t._getInputValues())}))}},{key:"close",value:function(){v(k(a.prototype),"close",this).call(this),this._popup.querySelector(".popup__container-form").reset()}}])&&y(e.prototype,n),a}(u);function C(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var S=function(){function t(e,n,o,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._profileName=e,this._profileTitle=n,this._profileAvatar=o,this._about=r.about,this._avatar=r.avatar,this._cohort=r.cohort,this._name=r.name,this._id=r._id,this._editedProfileName=document.querySelector(".popup__container-form-input_text_username"),this._editedProfileTitle=document.querySelector(".popup__container-form-input_text_profession")}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,about:this._profileTitle.textContent,cohort:this._cohort,avatar:this._avatar,_id:this._id}}},{key:"setUserInfo",value:function(t){this._profileName.textContent=t.name,this._profileTitle.textContent=t.about,this._about=t.about,this._cohort=t.cohort,this._name=t.name,this._id=t._id}},{key:"setUserAvatar",value:function(t){this._avatar=t.avatar,this._profileAvatar.src=t.avatar}}])&&C(e.prototype,n),t}();function w(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var E=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._authorization=e.authorization,this._contentTip=e.contentTip}var e,n;return e=t,(n=[{key:"_getResponseData",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getCards",value:function(){return fetch("".concat(this._url,"cards"),{method:"GET",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"getProfile",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"editProfileInfo",value:function(t){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({name:t.name,about:t.about})}).then(this._getResponseData)}},{key:"editProfileAvatar",value:function(t){return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({avatar:t.avatar})}).then(this._getResponseData)}},{key:"addCard",value:function(t){return fetch("".concat(this._url,"cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":this._contentTip},body:JSON.stringify({link:t.link,name:t.name})}).then(this._getResponseData)}},{key:"deleteCard",value:function(t){console.log(this._authorization),console.log(this._contentTip);var e=t;return fetch("".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"setLike",value:function(t){var e=t;return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then(this._getResponseData)}},{key:"deleteLike",value:function(t){var e=t;return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentTip}}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(res.status))}))}}])&&w(e.prototype,n),t}();function L(t){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function O(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function T(t,e,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=q(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function P(t,e){return(P=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function j(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function q(t){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var I=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&P(t,e)}(a,t);var e,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=q(o);if(r){var n=q(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return j(this,t)});function a(t){var e,n=t.popupSelector,o=t.formSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,n))._form=e._popup.querySelector(".popup__container-form"),e._button=e._popup.querySelector(".popup__container-form-save-button"),e._formSubmit=o,e}return e=a,(n=[{key:"open",value:function(t){T(q(a.prototype),"open",this).call(this),this._button.textContent="Да",this._cardId=t}},{key:"setEventListeners",value:function(){var t=this;T(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._button.textContent="Удаление...",t._formSubmit(t._card,t._cardId)}))}}])&&O(e.prototype,n),a}(u),R={formSelector:".popup__container-form",inputSelector:".popup__container-form-input",submitButtonSelector:".popup__container-form-save-button",inactiveButtonClass:"popup__container-form-save-button_disabled",inputErrorClass:"popup__container-form-input_error",errorClass:"error"},x=[],B=document.querySelector(".add-place").querySelector(".popup__container-form"),D=document.querySelector(".profile-popup").querySelector(".popup__container-form"),z=document.querySelector(".avatar").querySelector(".popup__container-form"),A=document.querySelector(".profile__info-username"),N=document.querySelector(".profile__info-profession"),U=document.querySelector(".popup__container-form-input_text_username"),V=document.querySelector(".popup__container-form-input_text_profession"),H=document.querySelector(".profile__info-edit-button"),J=document.querySelector(".profile__avatar-container"),G=J.querySelector(".profile__avatar"),M={about:"",avatar:"",cohort:"cohort-27",name:"",_id:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15"};function F(t){M=t}function K(t){var n=new e({card:t,handleCardClick:function(t,e){Z.open(t,e)},userData:X.getUserInfo(),handleCardLike:function(e){return e?W.setLike(t._id):W.deleteLike(t._id)},handleCardDelete:function(){nt.open(t._id)}},"#card").createCard();Y.addItem(n)}fetch("https://mesto.nomoreparties.co/v1/cohort-27/users/me",{headers:{authorization:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15"}}).then((function(t){return t.json()})).then((function(t){F(t),X.setUserInfo(t),X.setUserAvatar(t)})),fetch("https://mesto.nomoreparties.co/v1/cohort-27/cards",{headers:{authorization:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15"}}).then((function(t){return t.json()})).then((function(t){var e;e=t.reverse(),x=e,t.forEach((function(t){K(t)}))})),new o(R,B).enableValidation();var Q=new o(R,D);Q.enableValidation(),new o(R,z).enableValidation();var W=new E({url:"https://mesto.nomoreparties.co/v1/cohort-27/",authorization:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15",contentTip:"application/json"}),X=new S(A,N,G,M),Y=new i({items:x,renderer:function(t){K(t)}},".elements");Y.renderItems();var Z=new _(".image-popup");Z.setEventListeners();var $=new g(".profile-popup",(function(t){W.editProfileInfo(t).then((function(){X.setUserInfo(t),$._button.textContent=$._textContainer,$.close()}))}));$.setEventListeners();var tt=new g(".avatar",(function(t){W.editProfileAvatar(t).then((function(){X.setUserAvatar(t),tt.close(),fetch("https://mesto.nomoreparties.co/v1/cohort-27/users/me",{headers:{authorization:"3fe0c274-9eb1-4b1e-a5bb-2bea77a9fe15"}}).then((function(t){return t.json()})).then((function(t){F(t),X.setUserInfo(t),tt._button.classList.add("popup__container-form-save-button_disabled"),tt._button.textContent=tt._textContainer}))}))}));tt.setEventListeners();var et=new g(".add-place",(function(t){t.likes=[],t.likes.length=0,t._id=M._id,t.owner={name:"",_id:""},t.owner.name=M.name,t.owner._id=M._id,K(t),W.addCard(t).then((function(){et._button.textContent=et._textContainer,et.close(),location.reload()}))}));et.setEventListeners();var nt=new I({popupSelector:".delete-popup",formSubmit:function(t,e){W.deleteCard(e).then((function(){location.reload(),nt._button.textContent=nt._textContainer,t.remove(),nt.close()}))}});nt.setEventListeners(),H.addEventListener("click",(function(){var t=X.getUserInfo();U.value=t.name,V.value=t.about,Q.toggleButtonState(),$.open()})),document.querySelector(".profile__add-button").addEventListener("click",(function(){et.open()})),J.addEventListener("click",(function(){Q.toggleButtonState(),tt.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,